##########################################
# Arquivo de configuração DBUnit
#
# Esta configuração é usada pelo Maven Profile responsável por
# executar testes unitários e usa um banco embedded in-memory (HSQLDB)
# 
# daniel.marreco@anbima.com.br
##########################################

############
# HSQL
############
database.driverClassName=org.hsqldb.jdbcDriver
database.url=jdbc:hsqldb:mem:PUBLIC;sql.syntax_ora=true
database.dialect=h2
database.userName=sa
database.password=sa
database.schemaNames=PUBLIC

# If set to true, the DBMaintainer will be used to update the unit test database schema. This is done once for each test run, when creating the DataSource that provides access to the unit test database.
updateDataBaseSchema.enabled=true
# Comma separated list of directories and files in which the database update scripts are located. Directories in this list are recursively searched for files.
dbMaintainer.script.locations=src/test/dbscripts/hsqldb

#########################

# Indicates the database must be recreated from scratch when an already executed script is updated. If false, the
# DBMaintainer will give an error when an existing script is updated.
dbMaintainer.fromScratch.enabled=true
# Indicates whether a from scratch update should be performed when the previous update failed, but
# none of the scripts were modified since that last update. If false a new update will be tried only when
# changes were made to the script files.
dbMaintainer.keepRetryingAfterError.enabled=true

# Set this property to true if the dbmaintain_scripts table should be created automatically if not found.
# If false, an exception is thrown when the table is not found, indicating how to create it manually.
# This property is false by default to be sure that a database is cleared by accident. If an executed
# scripts table is available, we assume it to be a database managed by dbmaintain.
dbMaintainer.autoCreateExecutedScriptsTable=true

dbMaintainer.disableConstraints.enabled=false

# DbUnit database XSD directory
dataSetStructureGenerator.xsd.dirName=target/xsd
#org.unitils.dbmaintainer.structure.DataSetStructureGenerator.implClassName=org.unitils.dbmaintainer.structure.impl.DtdDataSetStructureGenerator
#dtdGenerator.dtd.filename=target/dtd/negociacao.dtd

#unitils.module.easymock.enabled=false
unitils.module.hibernate.enabled=false
unitils.module.jpa.enabled=true

#jpa.persistenceProvider=hibernate

# By default, each test is executed in a transaction, which is committed in the end.
# If you want your transactions to rollback after every test
DatabaseModule.Transactional.value.default=rollback